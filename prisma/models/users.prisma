model Users {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  age Int?
  email String @unique
  password String
  avatar String?
  acceptTerms Boolean @default(false)
  isOnline Boolean @default(false)
  createdAt DateTime @default(now())
  tokens UserTokens[]
  messages Messages[]
  roomUsers RoomUsers[]
  // resetPasswordHashes ResetPasswordHashes[]
}

model UserTokens {
  id Int @id @default(autoincrement())
  refreshTokenHash String
  user Users @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
}

model RoomUsers {
  id Int @id @default(autoincrement())
  room Rooms @relation(fields: [roomId], references: [id])
  roomId Int
  user Users @relation(fields: [userId], references: [id])
  userId Int

  @@unique([roomId, userId])
  @@index([roomId])
  @@index([userId])
}

model Rooms {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  messages Messages[]
  roomUsers RoomUsers[]
}

model Messages {
  id Int @id @default(autoincrement())
  text String
  isRead Boolean @default(false)
  createdAt DateTime @default(now())
  room Rooms @relation(fields: [roomId], references: [id])
  roomId Int
  user Users @relation(fields: [userId], references: [id])
  userId Int
}

// model ResetPasswordHashes {
//   hash String @id @default(uuid())
//   used Boolean @default(false)
//   user Users @relation(fields: [userId], references: [id])
//   userId Int
//   createdAt DateTime @default(now())
// }

